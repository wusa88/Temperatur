#Sensor IDs
#28-0000053c5e59 (normaler Sensor)
#28-00000628848d
#28-00000615380c  
#28-0000061558bf  
#28-0000061568d8
#28-000006152b5d  
#28-000006151d22
#28-000006269c84
#28-000006156279
#28-00000615025b
#28-000006157b8c

import subprocess
import sys
import os
import time
import sqlite3

plot = "/home/pi/Desktop/programme/plot.plt"
gnuplot = "/usr/bin/gnuplot"
dbname = '/var/www/db.sqlite'

#sensorbuero = ("/sys/bus/w1/devices/28-0000053c5e59/w1_slave")
a = ("/sys/bus/w1/devices/28-00000628848d/w1_slave")
b = ("/sys/bus/w1/devices/28-00000615380c/w1_slave")
c = ("/sys/bus/w1/devices/28-0000061558bf/w1_slave")
d = ("/sys/bus/w1/devices/28-0000061568d8/w1_slave")
e = ("/sys/bus/w1/devices/28-000006152b5d/w1_slave")
f = ("/sys/bus/w1/devices/28-000006151d22/w1_slave")
g = ("/sys/bus/w1/devices/28-000006269c84/w1_slave")
h = ("/sys/bus/w1/devices/28-000006156279/w1_slave")
i = ("/sys/bus/w1/devices/28-00000615025b/w1_slave")
j = ("/sys/bus/w1/devices/28-000006157b8c/w1_slave")

#lt = localtime()
#Sensor buero
#buero = open(sensorbuero)
#tfile = buero.read()
#buero.close()
#tempdata = tfile.split("\n")[1].split(" ")[9]
#temp = float(tempdata[2:])
#temp = temp / 1000
#temp = round(temp,2)
#temp = str(temp)

#time.sleep(0.2)
def TimeStamp():
    stamp = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
    return(stamp)

zeit = TimeStamp()

#print zeit
#print(len(zeit))
#print len((zeit,))
#Sensor 1
try:
	sen1 = open(a)
	tfile1 = sen1.read()
	sen1.close()
	tempdata = tfile1.split("\n")[1].split(" ")[9]
	temp1 = float(tempdata[2:])
	temp1 = temp1 / 1000
	temp1 = round(temp1,2)
	temp1 = float(temp1)
except Exception as e:
	print ("Sensor 1 Fehler!",e)

#print type(sensortemp1)
#print sensortemp1
#sensortemp1 = str(sensortemp1)
#print type(sensortemp1)
#sleep(0.2)

#Sensor
try:
	sen2 = open(b)
	tfile2 = sen2.read()
	sen2.close()
	tempdata = tfile2.split("\n")[1].split(" ")[9]
	temp2 = float(tempdata[2:])
	temp2 = temp2 / 1000
	temp2 = round(temp2,2)
	temp2 = str(temp2)
except Exception as e: 
	print ("Sensor 2 Fehler!",e)
#sleep(0.2)

#Sensor
try:
	sen3= open(c)
	tfile3 = sen3.read()
	sen3.close()
	tempdata = tfile3.split("\n")[1].split(" ")[9]
	temp3 = float(tempdata[2:])
	temp3 = temp3 / 1000
	temp3 = round(temp3,2)
	temp3 = str(temp3)
except Exception as e:
	print ("Sensor 3 Fehler!",e)

#sleep(0.2)

#Sensor
try:
	sen4= open(d)
	tfile4 = sen4.read()
	sen4.close()
	tempdata = tfile4.split("\n")[1].split(" ")[9]
	temp4 = float(tempdata[2:])
	temp4 = temp4 / 1000
	temp4 = round(temp4,2)
	temp4 = str(temp4)
except Exception as e: 
	print ("Sensor 4 Fehler!",e)

#sleep(0.2)

#Sensor
try:
	sen5 = open(e)
	tfile5= sen5.read()
	sen5.close()
	tempdata = tfile5.split("\n")[1].split(" ")[9]
	temp5 = float(tempdata[2:])
	temp5 = temp5 / 1000
	temp5 = round(temp5,2)
	temp5 = str(temp5)
except Exception as e:
	print ("Sensor 5 Fehler!",e)

#sleep(0.2)

#Sensor
try:
	sen6= open(f)
	tfile6 = sen6.read()
	sen6.close()
	tempdata = tfile6.split("\n")[1].split(" ")[9]
	temp6 = float(tempdata[2:])
	temp6 = temp6 / 1000
	temp6 = round(temp6,2)
	temp6 = str(temp6)
except Exception as e:
	print ("Senor 6 Fehler!")

#sleep(0.2)

#Sensor
try:
	sen7= open(g)
	tfile7 = sen7.read()
	sen7.close()
	tempdata = tfile7.split("\n")[1].split(" ")[9]
	temp7 = float(tempdata[2:])
	temp7 = temp7 / 1000
	temp7 = round(temp7,2)
	temp7 = str(temp7)
except Exception as e :
	print ("Sensor 7 Fehler!",e)



#sleep(0.2)

#Sensor
try:
	sen8= open(h)
	tfile8 = sen8.read()
	sen8.close()
	tempdata = tfile8.split("\n")[1].split(" ")[9]
	temp8 = float(tempdata[2:])
	temp8= temp8 / 1000
	temp8 = round(temp8,2)
	temp8 = str(temp8)
except Exception as e:
	print ("Sensor 8 Fehler!",e)
#sleep(0.2)

#Sensor
try: 
	sen9= open(i)
	tfile9 = sen9.read()
	sen9.close()
	tempdata = tfile9.split("\n")[1].split(" ")[9]
	temp9 = float(tempdata[2:])
	temp9 = temp9 / 1000
	temp9 = round(temp9,2)
	temp9 = str(temp9)
except Exception as e: 
	print ("Sensor 9 Fehler!",e)
#sleep(0.2)

#Sensor
try:
	sen10= open(j)
	tfile10 = sen10.read()
	sen10.close()
	tempdata = tfile10.split("\n")[1].split(" ")[9]
	temp10 = float(tempdata[2:])
	temp10 = temp10 / 1000
	temp10 = round(temp10,2)
	temp10 = str(temp10)
except Exception as e: 
	print ("Sensor 10 Fehler!",e)

#log_temp()

#Datum = strftime("%d.%m.%Y")
#Uhrzeit = strftime ("%H:%M:%S")
#fobj_out = open ("/home/pi/Desktop/programme/tempkomplett.txt","a")
#fobj_out.write("\n" + Datum + "_" + Uhrzeit + ";" + temp1 + ";"  + temp2 + ";"  + temp3 + ";"  + temp4 + ";"  + temp5 + ";"  + temp6 + ";" + temp7 +";" + temp8 + ";"  + temp9 + ";" + temp10 + ";")
#fobj_out.close()
#subprocess.call([gnuplot, plot], stdout=subprocess.PIPE)

try:
	conn = sqlite3.connect(dbname)
	print ("open db ok")
	c = conn.cursor()
	sql_command = ('''create table if not exists temperatur (id INTEGER PRIMARY KEY AUTOINCREMENT, zeit DATETIME, temp1, temp2 NUMERIC, temp3 NUMERIC, temp4 NUMERIC, temp5 NUMERIC, temp6 NUMERIC, temp7 NUMERIC, temp8 NUMERIC, temp9 NUMERIC, temp10 NUMERIC)''');
	c.execute(sql_command)
	conn.commit()
	print ("Tabelle erstellt!")
except Exception as e: 
	print ("Fehler beim erstellen der Tabelle",e)

try: 
	c.execute ("INSERT INTO temperatur VALUES (NULL,datetime(CURRENT_TIMESTAMP,'localtime'),?,?,?,?,?,?,?,?,?,?)", (temp1,temp2,temp3,temp4,temp5,temp6,temp7,temp8,temp9,temp10,))
	conn.commit()
	#conn.close()
except Exception as e: 
	print ("Fehler beim Befuellen der Tabelle",e)
	

#if __name__=="__main__":
#	main()
